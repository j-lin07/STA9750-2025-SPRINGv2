---
title: "MP02 Submission: GTA IV Analysis and Press Release"
author: Jeanne Lin
Date: 2025-03-26
format: 
  html: 
    code-fold: true
execute:
  echo: false
---
# Executive Summary
After a comprehensive analysis of transit operations using the 2023 National Transit Database (NTD) and EIA State Electricity Profiles and Emissions Factors, we are proud to announce the winners of the GTA IV Awards. Our study evaluated agencies on key sustainability metrics, including emissions per unlinked passenger trip (UPT), emissions avoided relative to a hypothetical driving scenario, and the proportion of energy derived from electricity.

Our methodology included:




* Total Emissions Calculation:
We calculated total CO₂ emissions by converting electric energy (from kWh to MWh) using state-specific emission factors (lb CO₂/MWh) and by converting fuel consumption (reported in gallons) into CO₂ using conversion factors derived from the EIA’s CO₂ Emissions by Volume and Mass data.




* Efficiency Metrics:
We computed emissions per UPT (Total Emissions ÷ UPT) and per passenger mile, and we estimated emissions avoided by comparing actual transit emissions to a hypothetical scenario where all trips were driven in vehicles averaging 25 miles per gallon.




* Electrification Ratio:
We also determined the share of total energy consumed that is electric by converting kWh (electric usage) and gallons (non-electric fuels) to MWh using published energy content values.

## Key Findings
Greenest Transit Agency Award:




* Metric: Emissions per UPT (Total Emissions ÷ UPT)




* Winner: MTA New York City Transit




* Winning Value: 0.12 lb CO₂ per UPT




* Reference: The median agency emits 0.25 lb CO₂ per UPT, making MTA NYC Transit nearly 50% more efficient.

Electrification Excellence Award:




* Metric: Electrification Ratio = Electric Energy (MWh) / Total Energy (Electric + Non-Electric in MWh)




* Winner: Port Authority Transit Corporation




* Winning Value: 78% electric energy usage




* Reference: The median agency operates with roughly 35% electric energy, more than doubling Port Authority Transit Corporation’s ratio.

Worst Of Award – Least Green Agency:




* Metric: Emissions per UPT




* Winner: Alaska Railroad Corporation




* Winning Value: 0.90 lb CO₂ per UPT




* Reference: With a median of 0.25 lb CO₂ per UPT, this agency’s emissions are more than three times higher.

# The Steps:
## Downloading the data
We began by aggregating the joined dataset at the agency level. Because transit usage is reported at the agency level, we summed the emissions across multiple modes for each agency and then computed key efficiency metrics
```{r}
#| include: false
ensure_package <- function(pkg){
  pkg <- as.character(substitute(pkg))
  options(repos = c(CRAN = "https://cloud.r-project.org"))
  if(!require(pkg, character.only=TRUE)) install.packages(pkg)
  stopifnot(require(pkg, character.only=TRUE))
}

ensure_package(dplyr)
ensure_package(stringr)
ensure_package(tidyr)
ensure_package(httr2)
ensure_package(rvest)
ensure_package(datasets)
ensure_package(purrr)
ensure_package(DT)

get_eia_sep <- function(state, abbr){
  state_formatted <- str_to_lower(state) |> str_replace_all("\\s", "")
  
  dir_name <- file.path("data", "mp02")
  file_name <- file.path(dir_name, state_formatted)
  
  dir.create(dir_name, showWarnings=FALSE, recursive=TRUE)
  
  if(!file.exists(file_name)){
    BASE_URL <- "https://www.eia.gov"
    REQUEST <- request(BASE_URL) |> 
      req_url_path("electricity", "state", state_formatted)
    
    RESPONSE <- req_perform(REQUEST)
    
    resp_check_status(RESPONSE)
    
    writeLines(resp_body_string(RESPONSE), file_name)
  }
  
  TABLE <- read_html(file_name) |> 
    html_element("table") |> 
    html_table() |>
    mutate(Item = str_to_lower(Item))
  
  if("U.S. rank" %in% colnames(TABLE)){
    TABLE <- TABLE |> rename(Rank = `U.S. rank`)
  }
  
  CO2_MWh <- TABLE |> 
    filter(Item == "carbon dioxide (lbs/mwh)") |>
    pull(Value) |> 
    str_replace_all(",", "") |>
    as.numeric()
  
  PRIMARY <- TABLE |> 
    filter(Item == "primary energy source") |> 
    pull(Rank)
  
  RATE <- TABLE |>
    filter(Item == "average retail price (cents/kwh)") |>
    pull(Value) |>
    as.numeric()
  
  GENERATION_MWh <- TABLE |>
    filter(Item == "net generation (megawatthours)") |>
    pull(Value) |>
    str_replace_all(",", "") |>
    as.numeric()
  
  data.frame(CO2_MWh               = CO2_MWh, 
             primary_source        = PRIMARY,
             electricity_price_MWh = RATE * 10, # / 100 cents to dollars &
             # * 1000 kWh to MWH 
             generation_MWh        = GENERATION_MWh, 
             state                 = state, 
             abbreviation          = abbr
  )
}

EIA_SEP_REPORT <- map2(state.name, state.abb, get_eia_sep) |> list_rbind()
```

### Table of EIA SEP Report
```{r}
#| echo: false
ensure_package(scales)
ensure_package(DT)

EIA_SEP_REPORT |> 
  select(-abbreviation) |>
  arrange(desc(CO2_MWh)) |>
  mutate(CO2_MWh = number(CO2_MWh, big.mark=","), 
         electricity_price_MWh = dollar(electricity_price_MWh), 
         generation_MWh = number(generation_MWh, big.mark=",")) |>
  rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, 
         `Primary Source of Electricity Generation`=primary_source, 
         `Average Retail Price for 1000 kWh`=electricity_price_MWh, 
         `Total Generation Capacity (MWh)`= generation_MWh, 
         State=state) |>
  datatable()
```
## Task 2 Analysis of the SEP Data
Which state has the most expensive retail electricity?
Based on the computed values from the SEP data, the state with the most expensive retail electricity is Hawaii.

Which state has the ‘dirtiest’ electricity mix?
The state that has the dirtiest electricity mix is West Virginia.

On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US? (Note that you will need to use a suitably weighted average here.)
 Calculate the total pounds of CO2 in across all states:
```{r}
  total_CO2 <- sum(EIA_SEP_REPORT$CO2_MWh*EIA_SEP_REPORT$generation_MWh, na.rm = TRUE)
total_CO2
```
 Calculate the total generation in MWh across all states:
```{r} 
  total_generation <- sum(EIA_SEP_REPORT$generation_MWh, na.rm = TRUE)
total_generation
```
 Compute the weighted average (pounds CO2 per MWh):
```{r}
  weighted_avg_CO2 <- total_CO2/total_generation
weighted_avg_CO2
```

What is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?
```{r}
#Count how many states use each primary energy source:
 primary_freq <- EIA_SEP_REPORT |>
    count(primary_source)
 primary_freq
#Minimum frequency:
 min_count <- min(primary_freq$n)
min_count
#Identify the rarest primary energy source:
 rarest_source <- primary_freq |>
   filter(n == min_count) 
 rarest_source
#Associated cost of rarest source and where it is used:
 rare_detail <- EIA_SEP_REPORT |>
   filter(primary_source %in% rarest_source)
 rare_detail
```
How many times cleaner is NY’s energy mix than that of Texas? 
```{r}
ny_CO2 <- EIA_SEP_REPORT |>
  filter(state == "New York")|>
  pull(CO2_MWh) |>
  as.numeric()
tx_Co2 <- EIA_SEP_REPORT |>
  filter(state == "Texas") |>
  pull(CO2_MWh) |>
  as.numeric()
#Compute the ratio so Texas CO2 intensity divided by New York CO2 intensity:
 ny_tx_ratio <- tx_Co2/ny_CO2
 ny_tx_ratio
 cat("New York's energy mix is", round(ny_tx_ratio, 2), "times cleaner than Texas.")
```
```{r}
#2023 Annual Database Energy Consumption
 ensure_package(readxl)
 # Create 'data/mp02' directory if not already present
 DATA_DIR <- file.path("data", "mp02")
 dir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)
 
 NTD_ENERGY_FILE <- file.path(DATA_DIR, "2023_ntd_energy.xlsx")
 
 if(!file.exists(NTD_ENERGY_FILE)){
   DS <- download.file("https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx", 
                       destfile=NTD_ENERGY_FILE, 
                       method="curl")
   
   if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){
     cat("I was unable to download the NTD Energy File. Please try again.\n")
     stop("Download failed")
   }
 }
 
 NTD_ENERGY_RAW <- read_xlsx(NTD_ENERGY_FILE)
 #Clean up of NTD Data
 ensure_package(tidyr)
 to_numeric_fill_0 <- function(x){
   x <- if_else(x == "-", NA, x)
   replace_na(as.numeric(x), 0)
 }
 
 NTD_ENERGY <- NTD_ENERGY_RAW |> 
   select(-c(`Reporter Type`, 
             `Reporting Module`, 
             `Other Fuel`, 
             `Other Fuel Description`)) |>
   mutate(across(-c(`Agency Name`, 
                    `Mode`,
                    `TOS`), 
                 to_numeric_fill_0)) |>
   group_by(`NTD ID`, `Mode`, `Agency Name`) |>
   summarize(across(where(is.numeric), sum), 
             .groups = "keep") |>
   mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |>
   filter(ENERGY > 0) |>
   select(-ENERGY) |>
   ungroup()
 datatable(NTD_ENERGY)
 # Display 10 random rows
 slice_sample(NTD_ENERGY , n=10) 
```
## Task 3 Recoding the Mode Column 
```{r}
distinct(NTD_ENERGY, Mode)
NTD_ENERGY <- NTD_ENERGY |> 
  mutate(
    Mode = toupper(trimws(as.character(Mode))),
    Mode = case_when(
      Mode == "HR" ~ "Heavy Rail",
      Mode == "DR" ~ "Demand Response",
      Mode == "FB" ~ "Ferry Boat",
      Mode == "MB" ~ "Motor Boat",
      Mode == "SR" ~ "Streetcar",
      Mode == "TB" ~ "Trackless Bus",
      Mode == "VP" ~ "Vanpool",
      Mode == "CB" ~ "Commuter Bus",
      Mode == "RB" ~ "Rail Bus",
      Mode == "LR" ~ "Light Rail",
      Mode == "MG" ~ "Monorail",
      Mode == "CR" ~ "Commuter Rail",
      Mode == "AR" ~ "Automated Rail",
      Mode == "TR" ~ "Trolleybus",
      Mode == "HR" ~ "Heavy Rail",
      Mode == "YR" ~ "Yard Rail",
      Mode == "IP" ~ "Intercity Passenger",
      Mode == "PB" ~ "Paratransit Bus",
      Mode == "CC" ~ "Commuter Coach",
      TRUE ~ "Unknown"
  ))
  
datatable(NTD_ENERGY)
```
## 2023 Annual Database Service by Agency Report
```{r}
#| echo: false
ensure_package(readr)
NTD_SERVICE_FILE <- file.path(DATA_DIR, "2023_service.csv")
if(!file.exists(NTD_SERVICE_FILE)){
  DS <- download.file("https://data.transportation.gov/resource/6y83-7vuw.csv", 
                      destfile=NTD_SERVICE_FILE, 
                      method="curl")
  
  if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){
    cat("I was unable to download the NTD Service File. Please try again.\n")
    stop("Download failed")
  }
}

NTD_SERVICE_RAW <- read_csv(NTD_SERVICE_FILE)
#clean data
NTD_SERVICE <- NTD_SERVICE_RAW |>
  mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |> 
  rename(Agency = agency, 
         City   = max_city, 
         State  = max_state,
         UPT    = sum_unlinked_passenger_trips_upt, 
         MILES  = sum_passenger_miles) |>
  select(matches("^[A-Z]", ignore.case=FALSE)) |>
  filter(MILES > 0)
datatable(NTD_SERVICE)
```
## Task 4 Explore NTD Service Data
Which transit service has the most UPT annually?
```{r}
library(dplyr)
most_upt <- NTD_SERVICE |>
  arrange(desc(UPT)) |>
  slice(1)

most_upt
```
What is the average trip length of a trip on MTA NYC?

```{r}
library(dplyr)
mta_data <- NTD_SERVICE |>
  filter(Agency == "MTA New York City Transit") |>
  summarise(total_UPT = sum(UPT),
            total_MILES = sum(MILES))

avg_trip_length <- mta_data$total_MILES / mta_data$total_UPT
avg_trip_length
```
Which transit service in NYC has the longest average trip length?
```{r}
#(NB: You need to be careful with the City column here. Certain MTA services are officially located in “New York City” while others are located in Brooklyn.)
library(dplyr)

nyc_services <- NTD_SERVICE |>
  filter(State == "NY" & (City == "New York City" | City == "Brooklyn")) |>
  mutate(avg_trip_length = MILES / UPT)

datatable(nyc_services)

longest_trip_service <- nyc_services |>
  arrange(desc(avg_trip_length)) |>
  slice(1)

longest_trip_service
```
Which state has the fewest total miles travelled by public transit?
```{r}
library(dplyr)

state_miles <- NTD_SERVICE |>
  group_by(State) |>
  summarise(total_miles = sum(MILES, na.rm = TRUE)) |>
  arrange(total_miles)

fewest_state <- state_miles |>
  slice(1)
fewest_state
```
Are all states represented in this data? If no, which ones are missing? 
```{r}
#The state.name and state.abb objects we used above may be useful here
#Get the unique state abbreviations present in the data
states_present <- unique(NTD_SERVICE$State)

#Identify the missing states from the 50 states list (state.abb)
missing_states <- setdiff(state.abb, states_present)

missing_states
```

## Task 5 Calculate Emissions
```{r}
library(dplyr)

# For consistency, rename the agency column in NTD_ENERGY to match NTD_SERVICE
NTD_ENERGY_clean <- NTD_ENERGY |>
  rename(Agency = `Agency Name`)  # and ensure it includes the Mode column

joined_table <- NTD_ENERGY_clean |>
  inner_join(NTD_SERVICE, by = c("NTD ID", "Agency"))

#Join the result with EIA_SEP_REPORT by matching State.
#State from NTD_SERVICE (e.g., "NY") matches EIA_SEP_REPORT's abbreviation.
joined_table <- joined_table |>
  inner_join(EIA_SEP_REPORT, by = c("State" = "abbreviation"))

datatable(joined_table)
```
## Total Emissions
```{r}
final_table <- joined_table |>
  mutate(
    total_emissions =
      ((`Electric Battery` + `Electric Propulsion`) / 1000 * CO2_MWh) +
      # Combustion fuels: gallons × (lb CO₂/gal) per fuel
      (`Bio-Diesel`)                  * 22.43 +
      (`Bunker Fuel`)                 * 22.5 +
      (`C Natural Gas`)               * 10.07 +
      (`Diesel Fuel`)                 * 22.43 +
      Ethanol                         * 15.8 +
      Methonal                        * 9.1 +
      Gasoline                        * 20.17 +
      Hydrogen                        * 0 +
      Kerosene                        * 21.26 +
      (`Liquified Nat Gas`)           * 10.07 +
      (`Liquified Petroleum Gas`)     * 12.75
  )
datatable(final_table)
```

## Task 6 Normalize Emissions to Transit Usage
```{r}
#Aggregate at agency level
agency_emissions <- final_table |>
  group_by(`NTD ID`, Agency, State, UPT, MILES) |>
  summarise(total_emissions = sum(total_emissions), .groups = "drop") |>
  mutate(
    emissions_per_UPT = total_emissions / UPT,
    emissions_per_Mile = total_emissions / MILES,
    size_category = ntile(UPT, 3)
  ) |>
  mutate(size_category = case_when(
    size_category == 1 ~ "small",
    size_category == 2 ~ "medium",
    size_category == 3 ~ "large"
  ))
#Find the most efficicent agencies (lowest emissions per UPT)
most_efficient_UPT <- agency_emissions |>
  group_by(size_category) |>
  arrange(emissions_per_UPT) |>
  slice(1) |>
  ungroup()

#find the most efficent agencies (emissions per passenger mile)
most_efficient_Miles <- agency_emissions |>
  group_by(size_category) |>
  arrange(emissions_per_Mile) |>
  slice(1) |>
  ungroup()
```
Most Efficient Per UPT:
```{r}
datatable(most_efficient_UPT)
```
Most Efficient Per Miles:
```{r}
datatable(most_efficient_Miles)
```

## Task 7 Design and Implement metrics for the four GTA IV Green Transit Awards (plus winners)
# Award Determination
We filtered out very small agencies (those with UPT < 10,000) to avoid statistical noise. Then, for each award, agencies were ranked by the relevant metric.
```{r}
agency_summary <- final_table |>
  group_by(`NTD ID`, Agency, State) |>
  summarise(
    UPT             = sum(UPT),
    MILES           = sum(MILES),
    total_emissions = sum(total_emissions),
    # Sum electric consumption (in kWh)
    Elec_Batt       = sum(`Electric Battery`),
    Elec_Prop       = sum(`Electric Propulsion`),
    # Sum non-electric fuels (in gallons)
    Bio_Diesel      = sum(`Bio-Diesel`),
    Bunker_Fuel     = sum(`Bunker Fuel`),
    C_Natural_Gas   = sum(`C Natural Gas`),
    Diesel_Fuel     = sum(`Diesel Fuel`),
    Ethanol         = sum(Ethanol),
    Methonal        = sum(Methonal),
    Gasoline        = sum(Gasoline),
    Hydrogen        = sum(Hydrogen),
    Kerosene        = sum(Kerosene),
    Liqu_Nat_Gas    = sum(`Liquified Nat Gas`),
    Liqu_Pet_Gas    = sum(`Liquified Petroleum Gas`)
  ) |>
  ungroup()

# Step 2: Compute Emissions Efficiency Metrics 

# 2a. Emissions per UPT and per Mile:
agency_summary <- agency_summary |>
  mutate(
    emissions_per_UPT  = total_emissions / UPT,
    emissions_per_Mile = total_emissions / MILES
  )

# 2b. Hypothetical driving emissions and Emissions Avoided:
# Assume average vehicle mpg = 25 and gasoline emission factor = 20.17 lb CO₂/gal.
agency_summary <- agency_summary |>
  mutate(
    hypothetical_driving_emissions = (MILES / 25) * 20.17,
    emissions_avoided = hypothetical_driving_emissions - total_emissions
  )

# 2c. Compute Electrification Ratio:
# Convert electric usage from kWh to MWh:
agency_summary <- agency_summary |>
  mutate(
    electric_MWh = (Elec_Batt + Elec_Prop) / 1000
  )

# Convert non-electric fuel consumption (gallons) to MWh using approximate conversion factors:
# (These factors are approximate values in MWh per gallon.)
# Diesel, Bio-Diesel, Bunker Fuel: 0.04063 MWh/gal
# Gasoline: 0.03663 MWh/gal
# Kerosene: 0.0395 MWh/gal
# C Natural Gas and Liquified Nat Gas: 0.0252 MWh/gal (approx)
# Ethanol: ~0.037 MWh/gal; Methonal: ~0.035 MWh/gal
# Liquified Petroleum Gas: ~0.02682 MWh/gal
agency_summary <- agency_summary |>
  mutate(
    nonElectric_MWh =
      Bio_Diesel   * 0.04063 +
      Bunker_Fuel  * 0.04063 +
      C_Natural_Gas* 0.0252  +
      Diesel_Fuel  * 0.04063 +
      Ethanol      * 0.037   +
      Methonal     * 0.035   +
      Gasoline     * 0.03663 +
      Kerosene     * 0.0395  +
      Liqu_Nat_Gas * 0.0252  +
      Liqu_Pet_Gas * 0.02682
  )

# Electrification Ratio = Electric_MWh / (Electric_MWh + NonElectric_MWh)
agency_summary <- agency_summary |>
  mutate(
    Electrification_Ratio = electric_MWh / (electric_MWh + nonElectric_MWh)
  )

# Step 3: Determine Award Winners 

# Filter out extremely small agencies (e.g., UPT < 10,000) to avoid noise:
agency_summary_filtered <- agency_summary |>
  filter(UPT > 10000)

# 1. Greenest Transit Agency: lowest emissions per UPT
greenest_agency <- agency_summary_filtered |>
  arrange(emissions_per_UPT) |>
  slice(1)

# 2. Most Emissions Avoided: highest difference between hypothetical driving and actual emissions
most_emissions_avoided <- agency_summary_filtered |>
  arrange(desc(emissions_avoided)) |>
  slice(1)

# 3. Electrification Excellence Award: highest Electrification Ratio
electrification_excellence <- agency_summary_filtered |>
  arrange(desc(Electrification_Ratio)) |>
  slice(1)

# 4. Least Green Agency (“Worst Of”): highest emissions per UPT
least_green_agency <- agency_summary_filtered |>
  arrange(desc(emissions_per_UPT)) |>
  slice(1)

# Step 4: Display the Winners

cat("GTA IV Awards:\n")
cat("1. Greenest Transit Agency (lowest emissions per UPT):", greenest_agency$Agency, "in", greenest_agency$State, "\n")
cat("2. Most Emissions Avoided:", most_emissions_avoided$Agency, "in", most_emissions_avoided$State, "\n")
cat("3. Electrification Excellence Award (highest electric share):", electrification_excellence$Agency, "in", electrification_excellence$State, "\n")
cat("4. Worst Of Award (highest emissions per UPT):", least_green_agency$Agency, "in", least_green_agency$State, "\n")
```
# Appendix
## Figure 1: Emissions per UPT Across Agencies – Highlighting the Greenest Transit Agency Award Winner
```{r}
library(ggplot2)
library(dplyr)
library(scales)

p1 <- agency_summary_filtered |>
  ggplot(aes(x = "", y = emissions_per_UPT)) +
  geom_boxplot(fill = "lightblue", alpha = 0.7, outlier.shape = NA) +
  geom_jitter(width = 0.2, alpha = 0.5, color = "gray") +
  geom_point(data = greenest_agency, aes(y = emissions_per_UPT), color = "darkgreen", size = 4) +
  geom_hline(yintercept = median(agency_summary_filtered$emissions_per_UPT, na.rm = TRUE),
             linetype = "dashed", color = "red") +
  labs(title = "Emissions per UPT Across Agencies",
       subtitle = paste("Greenest Transit Agency Winner:",
                        greenest_agency$Agency, "(", greenest_agency$State, ")",
                        round(greenest_agency$emissions_per_UPT, 2), "lb CO₂ per UPT"),
       y = "Emissions per UPT (lb CO₂)",
       x = "") +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        panel.grid.major.x = element_blank())

# Save plot as publication-ready image
ggsave("Greenest_Transit_Agency.png", plot = p1, width = 7, height = 5, dpi = 300)

```
![](Greenest_Transit_Agency.png)

## Figure 2: Electrification Ratio by Agency – Spotlight on Electrification Excellence

